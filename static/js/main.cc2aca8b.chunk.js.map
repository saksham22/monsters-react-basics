{"version":3,"sources":["components/cards/cards.component.jsx","components/card-list/card.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,EAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAK,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCLbC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEMD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,MCkBlBM,MAXf,YAAkD,IAA9BC,EAA6B,EAA7BA,YAAcC,EAAe,EAAfA,aAC9B,OACI,uBACJZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,KCuDCG,E,kDAjDb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CAEXR,SAAS,CACP,CACEH,KAAK,eACLD,GAAG,KAEL,CACEC,KAAK,UACLD,GAAG,KAEL,CACEC,KAAK,SACLD,GAAG,MAGPa,YAAY,IAlBH,E,qDAuBb,WAAoB,IAAD,OACjBC,MAAM,+CAA+CC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAE5H,WAAS,IAAD,SAC0BE,KAAKR,MAA9BR,EADD,EACCA,SAAUS,EADX,EACWA,YACXQ,EAAmBjB,EAASkB,QAChC,SAAAvB,GAAO,OAAIA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAG7D,OAEE,sBAAK3B,UAAU,MAAf,UACE,kDAIA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAGtG,cAAC,EAAD,CAAUvB,SAAUiB,W,GA3CJO,aCbHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cc2aca8b.chunk.js","sourcesContent":["import React from \"react\"\r\nimport './cards.style.css'\r\n\r\nexport const Card = props =>(\r\n    \r\n    <div className='card-container'>\r\n        <img alt =\"MONSTER\" src={`https://robohash.org/${props.monster.id}/set=set2&size=150x150`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './card.styles.css'\r\nimport { Card } from '../cards/cards.component';\r\nexport const CardList = props =>(\r\n    <div className='card-list'>\r\n        {\r\n          props.monsters.map(monster => (\r\n              <Card key={monster.id} monster={monster}></Card>\r\n          ))\r\n        }\r\n    </div>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n","import \"./search-box.styles.css\"\r\n\r\nimport React from 'react'\r\n\r\n// const SearchBox = ({placeholder , handleChange}) =>(\r\n//     <input\r\n//         className='search'\r\n//         type='search'\r\n//         placeholder={placeholder}\r\n//         onChange={handleChange}\r\n//     />\r\n// );\r\n\r\n\r\nfunction Searchbox({placeholder , handleChange}) {\r\n    return(\r\n        <input\r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n/>\r\n    );\r\n}\r\n\r\nexport default Searchbox\r\n\r\n    \r\n \r\n","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card.component';\nimport Searchbox from './components/search-box/search-box.component';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      // string: \"Hello Saksham\"\n      monsters:[\n        {\n          name:'Frankenstein',\n          id:'1'\n        },\n        {\n          name:'Dracula',\n          id:'2'\n        },\n        {\n          name:'Zombie',\n          id:'3'\n        },\n      ],\n      searchField:''\n    };\n  }\n\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users/').then(response=> response.json()).then(users=>this.setState({monsters:users}))\n  }\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return(\n\n      <div className='App'>\n        <h1>Monsters Roladex</h1>\n        \n        \n        {/* <input type='search' placeholder='search monster' onChange={e => this.setState({searchField:e.target.value})}/> */}\n        <Searchbox placeholder=\"Search Monsters\" handleChange={e => this.setState({searchField:e.target.value})}/>\n\n      \n  <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}